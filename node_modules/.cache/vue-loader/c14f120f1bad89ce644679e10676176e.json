{"remainingRequest":"C:\\Users\\Korisnik\\Desktop\\lovro\\dogspot\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Korisnik\\Desktop\\lovro\\dogspot\\src\\views\\Proizvodi.vue?vue&type=template&id=0224985c&","dependencies":[{"path":"C:\\Users\\Korisnik\\Desktop\\lovro\\dogspot\\src\\views\\Proizvodi.vue","mtime":1649808269784},{"path":"C:\\Users\\Korisnik\\Desktop\\lovro\\dogspot\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649279055367},{"path":"C:\\Users\\Korisnik\\Desktop\\lovro\\dogspot\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1649279058904},{"path":"C:\\Users\\Korisnik\\Desktop\\lovro\\dogspot\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649279055367},{"path":"C:\\Users\\Korisnik\\Desktop\\lovro\\dogspot\\node_modules\\vue-loader\\lib\\index.js","mtime":1649279057969}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Cjx2LWNvbnRhaW5lciBmbHVpZD4KICA8di1yb3cganVzdGlmeT0iY2VudGVyIiBjbGFzcz0ibXgtYXV0byI+CiAgICA8di1jb2wgY29scz0iNCIgbWQ9IjIiIHhzPSIyIj4KICAgICAgPHYtYXBwLWJhciBjb2xvcj0id2hpdGUiIGJyaWdodCByb3VuZGVkPgogICAgICAgIDx2LWFwcC1iYXItbmF2LWljb24gY2xhc3M9Im14LWF1dG8iIEBjbGljay5zdG9wPSJkcmF3ZXIgPSAhZHJhd2VyIgogICAgICAgICAgPkZpbHRlcjwvdi1hcHAtYmFyLW5hdi1pY29uCiAgICAgICAgPgogICAgICA8L3YtYXBwLWJhcj4KICAgIDwvdi1jb2w+CiAgPC92LXJvdz4KICA8di1uYXZpZ2F0aW9uLWRyYXdlciB2LW1vZGVsPSJkcmF3ZXIiIGFic29sdXRlIGxlZnQgdGVtcG9yYXJ5IGFwcD4KICAgIDx2LWxpc3QgbmF2IGRlbnNlPgogICAgICA8di1saXN0LWl0ZW0tZ3JvdXAKICAgICAgICB2LW1vZGVsPSJncm91cCIKICAgICAgICBhY3RpdmUtY2xhc3M9ImRlZXAtcHVycGxlLS10ZXh0IHRleHQtLWFjY2VudC00IgogICAgICA+CiAgICAgICAgPHYtZXhwYW5zaW9uLXBhbmVscz4KICAgICAgICAgIDx2LWV4cGFuc2lvbi1wYW5lbD4KICAgICAgICAgICAgPHYtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcgogICAgICAgICAgICAgID5WcnN0YSDFvml2b3RpbmplPC92LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIKICAgICAgICAgICAgPgogICAgICAgICAgICA8di1leHBhbnNpb24tcGFuZWwtY29udGVudD4KICAgICAgICAgICAgICA8di1saXN0LWl0ZW0+CiAgICAgICAgICAgICAgICA8di1jaGVja2JveAogICAgICAgICAgICAgICAgICBsYWJlbD0iU3ZpIHByb2l6dm9kaSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ic2VsZWN0ZWRDYXRlZ29yeSIKICAgICAgICAgICAgICAgICAgY29sb3I9ImJsdWUiCiAgICAgICAgICAgICAgICAgIHZhbHVlPSJzdmkiCiAgICAgICAgICAgICAgICA+PC92LWNoZWNrYm94PgogICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICAgICAgICAgIDx2LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgIDx2LWNoZWNrYm94CiAgICAgICAgICAgICAgICAgIGxhYmVsPSJQcm9penZvZGkgemEgcHNlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJzZWxlY3RlZENhdGVnb3J5IgogICAgICAgICAgICAgICAgICBjb2xvcj0iYmx1ZSIKICAgICAgICAgICAgICAgICAgdmFsdWU9InBhcyIKICAgICAgICAgICAgICAgID48L3YtY2hlY2tib3g+CiAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtPgogICAgICAgICAgICAgICAgPHYtY2hlY2tib3gKICAgICAgICAgICAgICAgICAgbGFiZWw9IlByb2l6dm9kaSB6YSBtYcSNa2UiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InNlbGVjdGVkQ2F0ZWdvcnkiCiAgICAgICAgICAgICAgICAgIGNvbG9yPSJibHVlIgogICAgICAgICAgICAgICAgICB2YWx1ZT0ibWFja2EiCiAgICAgICAgICAgICAgICA+PC92LWNoZWNrYm94PgogICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICAgICAgICAgIDx2LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgIDx2LWNoZWNrYm94CiAgICAgICAgICAgICAgICAgIGxhYmVsPSJQcm9penZvZGkgemEgcHNlIGkgbWHEjWtlIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJzZWxlY3RlZENhdGVnb3J5IgogICAgICAgICAgICAgICAgICBjb2xvcj0iYmx1ZSIKICAgICAgICAgICAgICAgICAgdmFsdWU9InBhc21hY2thIgogICAgICAgICAgICAgICAgPjwvdi1jaGVja2JveD4KICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtPgogICAgICAgICAgICA8L3YtZXhwYW5zaW9uLXBhbmVsLWNvbnRlbnQ+CiAgICAgICAgICA8L3YtZXhwYW5zaW9uLXBhbmVsPgogICAgICAgIDwvdi1leHBhbnNpb24tcGFuZWxzPgogICAgICAgIDx2LWRpdmlkZXI+PC92LWRpdmlkZXI+CiAgICAgICAgPHYtZXhwYW5zaW9uLXBhbmVscz4KICAgICAgICAgIDx2LWV4cGFuc2lvbi1wYW5lbD4KICAgICAgICAgICAgPHYtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcj5CcmVuZDwvdi1leHBhbnNpb24tcGFuZWwtaGVhZGVyPgogICAgICAgICAgICA8di1leHBhbnNpb24tcGFuZWwtY29udGVudD4KICAgICAgICAgICAgICA8di1saXN0LWl0ZW0+CiAgICAgICAgICAgICAgICA8di1jaGVja2JveAogICAgICAgICAgICAgICAgICBsYWJlbD0iVmV0Rm9vZCBQcm9mZmVzaW9uYWwiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InNlbGVjdGVkQ2F0ZWdvcnl5eSIKICAgICAgICAgICAgICAgICAgY29sb3I9ImJsdWUiCiAgICAgICAgICAgICAgICAgIHZhbHVlPSJzdmkiCiAgICAgICAgICAgICAgICA+PC92LWNoZWNrYm94PgogICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICAgICAgICAgIDx2LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgIDx2LWNoZWNrYm94CiAgICAgICAgICAgICAgICAgIGxhYmVsPSJCQVJGZWVkIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJzZWxlY3RlZENhdGVnb3J5eXkiCiAgICAgICAgICAgICAgICAgIGNvbG9yPSJibHVlIgogICAgICAgICAgICAgICAgICB2YWx1ZT0iQkFSRmVlZCIKICAgICAgICAgICAgICAgID48L3YtY2hlY2tib3g+CiAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtPgogICAgICAgICAgICAgICAgPHYtY2hlY2tib3gKICAgICAgICAgICAgICAgICAgbGFiZWw9IlNwb3J0ICYgRml0IgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJzZWxlY3RlZENhdGVnb3J5eXkiCiAgICAgICAgICAgICAgICAgIGNvbG9yPSJibHVlIgogICAgICAgICAgICAgICAgICB2YWx1ZT0ibWFja2EiCiAgICAgICAgICAgICAgICA+PC92LWNoZWNrYm94PgogICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CiAgICAgICAgICAgIDwvdi1leHBhbnNpb24tcGFuZWwtY29udGVudD4KICAgICAgICAgIDwvdi1leHBhbnNpb24tcGFuZWw+CiAgICAgICAgPC92LWV4cGFuc2lvbi1wYW5lbHM+CiAgICAgICAgPHYtZGl2aWRlcj48L3YtZGl2aWRlcj4KICAgICAgICA8di1leHBhbnNpb24tcGFuZWxzPgogICAgICAgICAgPHYtZXhwYW5zaW9uLXBhbmVsPgogICAgICAgICAgICA8di1leHBhbnNpb24tcGFuZWwtaGVhZGVyCiAgICAgICAgICAgICAgPlRlcmFwZXV0c2thIHNrdXBpbmE8L3YtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcgogICAgICAgICAgICA+CiAgICAgICAgICAgIDx2LWV4cGFuc2lvbi1wYW5lbC1jb250ZW50PgogICAgICAgICAgICAgIDx2LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgIDx2LWNoZWNrYm94CiAgICAgICAgICAgICAgICAgIGxhYmVsPSJTaW5iaW90aWNpIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJzZWxlY3RlZENhdGVnb3J5eSIKICAgICAgICAgICAgICAgICAgY29sb3I9ImJsdWUiCiAgICAgICAgICAgICAgICAgIHZhbHVlPSJzaW5iaW90aWNpIgogICAgICAgICAgICAgICAgPjwvdi1jaGVja2JveD4KICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgICAgICAgICA8di1saXN0LWl0ZW0+CiAgICAgICAgICAgICAgICA8di1jaGVja2JveAogICAgICAgICAgICAgICAgICBsYWJlbD0iSW11bm9sb8Wha2kgc2lzdGVtIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJzZWxlY3RlZENhdGVnb3J5eSIKICAgICAgICAgICAgICAgICAgY29sb3I9ImJsdWUiCiAgICAgICAgICAgICAgICAgIHZhbHVlPSJwYXMiCiAgICAgICAgICAgICAgICA+PC92LWNoZWNrYm94PgogICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICAgICAgICAgIDx2LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgIDx2LWNoZWNrYm94CiAgICAgICAgICAgICAgICAgIGxhYmVsPSJSZWdlbmVyYWNpamEvZ3ViaXRhayB0ZcW+aW5lIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJzZWxlY3RlZENhdGVnb3J5eSIKICAgICAgICAgICAgICAgICAgY29sb3I9ImJsdWUiCiAgICAgICAgICAgICAgICAgIHZhbHVlPSJtYWNrYSIKICAgICAgICAgICAgICAgID48L3YtY2hlY2tib3g+CiAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtPgogICAgICAgICAgICAgICAgPHYtY2hlY2tib3gKICAgICAgICAgICAgICAgICAgbGFiZWw9IlBvdHBvcmEgxb5pdm90aW5qYW1hIHN0YXJpamUgZG9iaSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ic2VsZWN0ZWRDYXRlZ29yeXkiCiAgICAgICAgICAgICAgICAgIGNvbG9yPSJibHVlIgogICAgICAgICAgICAgICAgICB2YWx1ZT0ibWFja2EiCiAgICAgICAgICAgICAgICA+PC92LWNoZWNrYm94PgogICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICAgICAgICAgIDx2LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgIDx2LWNoZWNrYm94CiAgICAgICAgICAgICAgICAgIGxhYmVsPSJCb2xlc3RpIHNyY2EiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InNlbGVjdGVkQ2F0ZWdvcnl5IgogICAgICAgICAgICAgICAgICBjb2xvcj0iYmx1ZSIKICAgICAgICAgICAgICAgICAgdmFsdWU9InNyY2UiCiAgICAgICAgICAgICAgICA+PC92LWNoZWNrYm94PgogICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICAgICAgICAgIDx2LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgIDx2LWNoZWNrYm94CiAgICAgICAgICAgICAgICAgIGxhYmVsPSJQcmViaW90aWNpIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJzZWxlY3RlZENhdGVnb3J5eSIKICAgICAgICAgICAgICAgICAgY29sb3I9ImJsdWUiCiAgICAgICAgICAgICAgICAgIHZhbHVlPSJtYWNrYSIKICAgICAgICAgICAgICAgID48L3YtY2hlY2tib3g+CiAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtPgogICAgICAgICAgICAgICAgPHYtY2hlY2tib3gKICAgICAgICAgICAgICAgICAgbGFiZWw9IkpldHJhIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJzZWxlY3RlZENhdGVnb3J5eSIKICAgICAgICAgICAgICAgICAgY29sb3I9ImJsdWUiCiAgICAgICAgICAgICAgICAgIHZhbHVlPSJtYWNrYSIKICAgICAgICAgICAgICAgID48L3YtY2hlY2tib3g+CiAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbT4KCiAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtPgogICAgICAgICAgICAgICAgPHYtY2hlY2tib3gKICAgICAgICAgICAgICAgICAgbGFiZWw9IkltdW5vbG/FoWtpIHNpc3RlbSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ic2VsZWN0ZWRDYXRlZ29yeXkiCiAgICAgICAgICAgICAgICAgIGNvbG9yPSJibHVlIgogICAgICAgICAgICAgICAgICB2YWx1ZT0ibWFja2EiCiAgICAgICAgICAgICAgICA+PC92LWNoZWNrYm94PgogICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICAgICAgICAgIDx2LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgIDx2LWNoZWNrYm94CiAgICAgICAgICAgICAgICAgIGxhYmVsPSJCdWJyZXppIGkgdXJpbmFybmkgdHJha3QiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InNlbGVjdGVkQ2F0ZWdvcnl5IgogICAgICAgICAgICAgICAgICBjb2xvcj0iYmx1ZSIKICAgICAgICAgICAgICAgICAgdmFsdWU9Im1hY2thIgogICAgICAgICAgICAgICAgPjwvdi1jaGVja2JveD4KICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgICAgICAgICA8di1saXN0LWl0ZW0+CiAgICAgICAgICAgICAgICA8di1jaGVja2JveAogICAgICAgICAgICAgICAgICBsYWJlbD0iUG90cG9yYSB0aWpla29tIG9ua29sb8Wha2loIG9ib2xqZW5qYSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ic2VsZWN0ZWRDYXRlZ29yeXkiCiAgICAgICAgICAgICAgICAgIGNvbG9yPSJibHVlIgogICAgICAgICAgICAgICAgICB2YWx1ZT0ibWFja2EiCiAgICAgICAgICAgICAgICA+PC92LWNoZWNrYm94PgogICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICAgICAgICAgIDx2LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgIDx2LWNoZWNrYm94CiAgICAgICAgICAgICAgICAgIGxhYmVsPSJaZ2xvYm92aSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ic2VsZWN0ZWRDYXRlZ29yeXkiCiAgICAgICAgICAgICAgICAgIGNvbG9yPSJibHVlIgogICAgICAgICAgICAgICAgICB2YWx1ZT0ibWFja2EiCiAgICAgICAgICAgICAgICA+PC92LWNoZWNrYm94PgogICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICAgICAgICAgIDx2LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgIDx2LWNoZWNrYm94CiAgICAgICAgICAgICAgICAgIGxhYmVsPSJPcmFsbmEgaGlnaWplbmEiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InNlbGVjdGVkQ2F0ZWdvcnl5IgogICAgICAgICAgICAgICAgICBjb2xvcj0iYmx1ZSIKICAgICAgICAgICAgICAgICAgdmFsdWU9Im1hY2thIgogICAgICAgICAgICAgICAgPjwvdi1jaGVja2JveD4KICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgICAgICAgICA8di1saXN0LWl0ZW0+CiAgICAgICAgICAgICAgICA8di1jaGVja2JveAogICAgICAgICAgICAgICAgICBsYWJlbD0iT8SNaSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ic2VsZWN0ZWRDYXRlZ29yeXkiCiAgICAgICAgICAgICAgICAgIGNvbG9yPSJibHVlIgogICAgICAgICAgICAgICAgICB2YWx1ZT0ibWFja2EiCiAgICAgICAgICAgICAgICA+PC92LWNoZWNrYm94PgogICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICAgICAgICAgIDx2LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgIDx2LWNoZWNrYm94CiAgICAgICAgICAgICAgICAgIGxhYmVsPSJHYXN0cm8gaW50ZXN0aW5hbG5lIGJvbGVzdGkiCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InNlbGVjdGVkQ2F0ZWdvcnl5IgogICAgICAgICAgICAgICAgICBjb2xvcj0iYmx1ZSIKICAgICAgICAgICAgICAgICAgdmFsdWU9Im1hY2thIgogICAgICAgICAgICAgICAgPjwvdi1jaGVja2JveD4KICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtPgoKICAgICAgICAgICAgICA8di1saXN0LWl0ZW0+CiAgICAgICAgICAgICAgICA8di1jaGVja2JveAogICAgICAgICAgICAgICAgICBsYWJlbD0iWmEgdcWhaSIKICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ic2VsZWN0ZWRDYXRlZ29yeXkiCiAgICAgICAgICAgICAgICAgIGNvbG9yPSJibHVlIgogICAgICAgICAgICAgICAgICB2YWx1ZT0iemF1c2kiCiAgICAgICAgICAgICAgICA+PC92LWNoZWNrYm94PgogICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CgogICAgICAgICAgICAgIDx2LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgIDx2LWNoZWNrYm94CiAgICAgICAgICAgICAgICAgIGxhYmVsPSJLb8W+YSBpIGRsYWthIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJzZWxlY3RlZENhdGVnb3J5eSIKICAgICAgICAgICAgICAgICAgY29sb3I9ImJsdWUiCiAgICAgICAgICAgICAgICAgIHZhbHVlPSJtYWNrYSIKICAgICAgICAgICAgICAgID48L3YtY2hlY2tib3g+CiAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbT4KICAgICAgICAgICAgPC92LWV4cGFuc2lvbi1wYW5lbC1jb250ZW50PgogICAgICAgICAgPC92LWV4cGFuc2lvbi1wYW5lbD4KICAgICAgICA8L3YtZXhwYW5zaW9uLXBhbmVscz4KICAgICAgPC92LWxpc3QtaXRlbS1ncm91cD4KICAgIDwvdi1saXN0PgogIDwvdi1uYXZpZ2F0aW9uLWRyYXdlcj4KICA8di1kYXRhLWl0ZXJhdG9yCiAgICA6aXRlbXM9Iml0ZW1zIgogICAgOml0ZW1zLXBlci1wYWdlLnN5bmM9Iml0ZW1zUGVyUGFnZSIKICAgIDpwYWdlLnN5bmM9InBhZ2UiCiAgICA6c29ydC1ieT0ic29ydEJ5LnRvTG93ZXJDYXNlKCkiCiAgICA6c29ydC1kZXNjPSJzb3J0RGVzYyIKICAgIGhpZGUtZGVmYXVsdC1mb290ZXIKICA+CiAgICA8dGVtcGxhdGU+CiAgICAgIDx2LXJvdz4KICAgICAgICA8di1jb2wKICAgICAgICAgIHYtZm9yPSJpdGVtIGluIGZpbHRlcmVkUHJvaXp2b2RpIgogICAgICAgICAgOmtleT0iaXRlbSIKICAgICAgICAgIGNvbHM9IjEyIgogICAgICAgICAgc209IjYiCiAgICAgICAgICBtZD0iNCIKICAgICAgICAgIGxnPSIzIgogICAgICAgID4KICAgICAgICAgIDx2LWNhcmQ+CiAgICAgICAgICAgIDx2LWltZwogICAgICAgICAgICAgIHdpZHRoPSIxMjAiCiAgICAgICAgICAgICAgaGVpZ2h0PSIyMDAiCiAgICAgICAgICAgICAgOnNyYz0iaXRlbS5zbGlrYSIKICAgICAgICAgICAgICBjbGFzcz0ibXgtYXV0byIKICAgICAgICAgICAgPjwvdi1pbWc+CiAgICAgICAgICAgIDx2LWNhcmQtdGV4dCBjbGFzcz0idGV4dC1jZW50ZXIiIGFsaWduPSJjZW50ZXIiIGp1c3RpZnk9ImNlbnRlciI+CiAgICAgICAgICAgICAge3sgaXRlbS5uYXppdiB9fQogICAgICAgICAgICA8L3YtY2FyZC10ZXh0PgogICAgICAgICAgICA8di1kaWFsb2cKICAgICAgICAgICAgICB2LW1vZGVsPSJkaWFsb2ciCiAgICAgICAgICAgICAgZnVsbHNjcmVlbgogICAgICAgICAgICAgIGhpZGUtb3ZlcmxheQogICAgICAgICAgICAgIHRyYW5zaXRpb249ImRpYWxvZy1ib3R0b20tdHJhbnNpdGlvbiIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6YWN0aXZhdG9yPSJ7IG9uLCBhdHRycyB9IiBjbGFzcz0ibXgtYXV0byI+CiAgICAgICAgICAgICAgICA8di1jb2wgYWxpZ249ImNlbnRlciI+CiAgICAgICAgICAgICAgICAgIDx2LWJ0bgogICAgICAgICAgICAgICAgICAgIGNvbG9yPSJ3aGl0ZSIKICAgICAgICAgICAgICAgICAgICB2LWJpbmQ9ImF0dHJzIgogICAgICAgICAgICAgICAgICAgIHYtb249Im9uIgogICAgICAgICAgICAgICAgICAgIGp1c3RpZnk9ImNlbnRlciIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibXgtYXV0byIKICAgICAgICAgICAgICAgICAgICB3aWR0aD0iMTUwcHgiCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICBWacWhZSBvIHByb2l6dm9kdQogICAgICAgICAgICAgICAgICA8L3YtYnRuPjwvdi1jb2wKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgIDx2LWNhcmQ+CiAgICAgICAgICAgICAgICA8di10b29sYmFyIGRhcmsgY29sb3I9InByaW1hcnkiPgogICAgICAgICAgICAgICAgICA8di1idG4gaWNvbiBkYXJrIEBjbGljaz0iZGlhbG9nID0gZmFsc2UiPgogICAgICAgICAgICAgICAgICAgIDx2LWljb24+bWRpLWNsb3NlPC92LWljb24+CiAgICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgICA8L3YtdG9vbGJhcj4KICAgICAgICAgICAgICAgIDxiciAvPgogICAgICAgICAgICAgICAgPHYtcm93IGFsaWduPSJjZW50ZXIiIGp1c3RpZnk9ImNlbnRlciI+CiAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPSI2Ij4KICAgICAgICAgICAgICAgICAgICA8di1pbWcKICAgICAgICAgICAgICAgICAgICAgIHdpZHRoPSI0MDBweCIKICAgICAgICAgICAgICAgICAgICAgIDpzcmM9Iml0ZW0uc2xpa2EiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibXgtYXV0byIKICAgICAgICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiCiAgICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5PSJjZW50ZXIiCiAgICAgICAgICAgICAgICAgICAgPjwvdi1pbWc+CiAgICAgICAgICAgICAgICAgIDwvdi1jb2w+CgogICAgICAgICAgICAgICAgICA8di1jb2wKICAgICAgICAgICAgICAgICAgICA+PHYtY2FyZC10ZXh0CiAgICAgICAgICAgICAgICAgICAgICA+PGgxPnt7IGl0ZW0ubmF6aXYgfX08L2gxPjwvdi1jYXJkLXRleHQKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPHYtY2FyZC10ZXh0CiAgICAgICAgICAgICAgICAgICAgICA+PHA+CiAgICAgICAgICAgICAgICAgICAgICAgICJMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzY2luZwogICAgICAgICAgICAgICAgICAgICAgICBlbGl0LCBzZWQgZG8gZWl1c21vZCB0ZW1wb3IgaW5jaWRpZHVudCB1dCBsYWJvcmUgZXQKICAgICAgICAgICAgICAgICAgICAgICAgZG9sb3JlIG1hZ25hIGFsaXF1YS4gVXQgZW5pbSBhZCBtaW5pbSB2ZW5pYW0sIHF1aXMKICAgICAgICAgICAgICAgICAgICAgICAgbm9zdHJ1ZCBleGVyY2l0YXRpb24gdWxsYW1jbyBsYWJvcmlzIG5pc2kgdXQgYWxpcXVpcAogICAgICAgICAgICAgICAgICAgICAgICBleCBlYSBjb21tb2RvIGNvbnNlcXVhdC4gRHVpcyBhdXRlIGlydXJlIGRvbG9yIGluCiAgICAgICAgICAgICAgICAgICAgICAgIHJlcHJlaGVuZGVyaXQgaW4gdm9sdXB0YXRlIHZlbGl0IGVzc2UgY2lsbHVtIGRvbG9yZSBldQogICAgICAgICAgICAgICAgICAgICAgICBmdWdpYXQgbnVsbGEgcGFyaWF0dXIuIEV4Y2VwdGV1ciBzaW50IG9jY2FlY2F0CiAgICAgICAgICAgICAgICAgICAgICAgIGN1cGlkYXRhdCBub24gcHJvaWRlbnQsIHN1bnQgaW4gY3VscGEgcXVpIG9mZmljaWEKICAgICAgICAgICAgICAgICAgICAgICAgZGVzZXJ1bnQgbW9sbGl0IGFuaW0gaWQgZXN0IGxhYm9ydW0uIgogICAgICAgICAgICAgICAgICAgICAgPC9wPjwvdi1jYXJkLXRleHQKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgICAgICA8L3Ytcm93PgogICAgICAgICAgICAgIDwvdi1jYXJkPgogICAgICAgICAgICA8L3YtZGlhbG9nPgogICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgPC92LWNvbD4KICAgICAgPC92LXJvdz4KICAgIDwvdGVtcGxhdGU+CiAgICA8dGVtcGxhdGU+CiAgICAgIDx2LXJvdz4KICAgICAgICA8di1jb2wKICAgICAgICAgIHYtZm9yPSJpdGVtIGluIGZpbHRlcmVkQnJhbmQiCiAgICAgICAgICA6a2V5PSJpdGVtIgogICAgICAgICAgY29scz0iMTIiCiAgICAgICAgICBzbT0iNiIKICAgICAgICAgIG1kPSI0IgogICAgICAgICAgbGc9IjMiCiAgICAgICAgPgogICAgICAgICAgPHYtY2FyZD4KICAgICAgICAgICAgPHYtaW1nCiAgICAgICAgICAgICAgd2lkdGg9IjEyMCIKICAgICAgICAgICAgICBoZWlnaHQ9IjIwMCIKICAgICAgICAgICAgICA6c3JjPSJpdGVtLnNsaWthIgogICAgICAgICAgICAgIGNsYXNzPSJteC1hdXRvIgogICAgICAgICAgICA+PC92LWltZz4KICAgICAgICAgICAgPHYtY2FyZC10ZXh0IGNsYXNzPSJ0ZXh0LWNlbnRlciIgYWxpZ249ImNlbnRlciIganVzdGlmeT0iY2VudGVyIj4KICAgICAgICAgICAgICB7eyBpdGVtLm5heml2IH19CiAgICAgICAgICAgIDwvdi1jYXJkLXRleHQ+CiAgICAgICAgICAgIDx2LWRpYWxvZwogICAgICAgICAgICAgIHYtbW9kZWw9ImRpYWxvZyIKICAgICAgICAgICAgICBmdWxsc2NyZWVuCiAgICAgICAgICAgICAgaGlkZS1vdmVybGF5CiAgICAgICAgICAgICAgdHJhbnNpdGlvbj0iZGlhbG9nLWJvdHRvbS10cmFuc2l0aW9uIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDphY3RpdmF0b3I9Insgb24sIGF0dHJzIH0iIGNsYXNzPSJteC1hdXRvIj4KICAgICAgICAgICAgICAgIDx2LWNvbCBhbGlnbj0iY2VudGVyIj4KICAgICAgICAgICAgICAgICAgPHYtYnRuCiAgICAgICAgICAgICAgICAgICAgY29sb3I9IndoaXRlIgogICAgICAgICAgICAgICAgICAgIHYtYmluZD0iYXR0cnMiCiAgICAgICAgICAgICAgICAgICAgdi1vbj0ib24iCiAgICAgICAgICAgICAgICAgICAganVzdGlmeT0iY2VudGVyIgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJteC1hdXRvIgogICAgICAgICAgICAgICAgICAgIHdpZHRoPSIxNTBweCIKICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIFZpxaFlIG8gcHJvaXp2b2R1CiAgICAgICAgICAgICAgICAgIDwvdi1idG4+PC92LWNvbAogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgPHYtY2FyZD4KICAgICAgICAgICAgICAgIDx2LXRvb2xiYXIgZGFyayBjb2xvcj0icHJpbWFyeSI+CiAgICAgICAgICAgICAgICAgIDx2LWJ0biBpY29uIGRhcmsgQGNsaWNrPSJkaWFsb2cgPSBmYWxzZSI+CiAgICAgICAgICAgICAgICAgICAgPHYtaWNvbj5tZGktY2xvc2U8L3YtaWNvbj4KICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgIDwvdi10b29sYmFyPgogICAgICAgICAgICAgICAgPGJyIC8+CiAgICAgICAgICAgICAgICA8di1yb3cgYWxpZ249ImNlbnRlciIganVzdGlmeT0iY2VudGVyIj4KICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9IjYiPgogICAgICAgICAgICAgICAgICAgIDx2LWltZwogICAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjQwMHB4IgogICAgICAgICAgICAgICAgICAgICAgOnNyYz0iaXRlbS5zbGlrYSIKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJteC1hdXRvIgogICAgICAgICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciIKICAgICAgICAgICAgICAgICAgICAgIGp1c3RpZnk9ImNlbnRlciIKICAgICAgICAgICAgICAgICAgICA+PC92LWltZz4KICAgICAgICAgICAgICAgICAgPC92LWNvbD4KCiAgICAgICAgICAgICAgICAgIDx2LWNvbAogICAgICAgICAgICAgICAgICAgID48di1jYXJkLXRleHQKICAgICAgICAgICAgICAgICAgICAgID48aDE+e3sgaXRlbS5uYXppdiB9fTwvaDE+PC92LWNhcmQtdGV4dAogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICA8di1jYXJkLXRleHQKICAgICAgICAgICAgICAgICAgICAgID48cD4KICAgICAgICAgICAgICAgICAgICAgICAgIkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNjaW5nCiAgICAgICAgICAgICAgICAgICAgICAgIGVsaXQsIHNlZCBkbyBlaXVzbW9kIHRlbXBvciBpbmNpZGlkdW50IHV0IGxhYm9yZSBldAogICAgICAgICAgICAgICAgICAgICAgICBkb2xvcmUgbWFnbmEgYWxpcXVhLiBVdCBlbmltIGFkIG1pbmltIHZlbmlhbSwgcXVpcwogICAgICAgICAgICAgICAgICAgICAgICBub3N0cnVkIGV4ZXJjaXRhdGlvbiB1bGxhbWNvIGxhYm9yaXMgbmlzaSB1dCBhbGlxdWlwCiAgICAgICAgICAgICAgICAgICAgICAgIGV4IGVhIGNvbW1vZG8gY29uc2VxdWF0LiBEdWlzIGF1dGUgaXJ1cmUgZG9sb3IgaW4KICAgICAgICAgICAgICAgICAgICAgICAgcmVwcmVoZW5kZXJpdCBpbiB2b2x1cHRhdGUgdmVsaXQgZXNzZSBjaWxsdW0gZG9sb3JlIGV1CiAgICAgICAgICAgICAgICAgICAgICAgIGZ1Z2lhdCBudWxsYSBwYXJpYXR1ci4gRXhjZXB0ZXVyIHNpbnQgb2NjYWVjYXQKICAgICAgICAgICAgICAgICAgICAgICAgY3VwaWRhdGF0IG5vbiBwcm9pZGVudCwgc3VudCBpbiBjdWxwYSBxdWkgb2ZmaWNpYQogICAgICAgICAgICAgICAgICAgICAgICBkZXNlcnVudCBtb2xsaXQgYW5pbSBpZCBlc3QgbGFib3J1bS4iCiAgICAgICAgICAgICAgICAgICAgICA8L3A+PC92LWNhcmQtdGV4dAogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgICAgIDwvdi1kaWFsb2c+CiAgICAgICAgICA8L3YtY2FyZD4KICAgICAgICA8L3YtY29sPgogICAgICA8L3Ytcm93PgogICAgPC90ZW1wbGF0ZT4KCiAgICA8dGVtcGxhdGU+CiAgICAgIDx2LXJvdz4KICAgICAgICA8di1jb2wKICAgICAgICAgIHYtZm9yPSJpdGVtIGluIGZpbHRlcmVkTmFtamVuYSIKICAgICAgICAgIDprZXk9Iml0ZW0iCiAgICAgICAgICBjb2xzPSIxMiIKICAgICAgICAgIHNtPSI2IgogICAgICAgICAgbWQ9IjQiCiAgICAgICAgICBsZz0iMyIKICAgICAgICA+CiAgICAgICAgICA8di1jYXJkPgogICAgICAgICAgICA8di1pbWcKICAgICAgICAgICAgICB3aWR0aD0iMTIwIgogICAgICAgICAgICAgIGhlaWdodD0iMjAwIgogICAgICAgICAgICAgIDpzcmM9Iml0ZW0uc2xpa2EiCiAgICAgICAgICAgICAgY2xhc3M9Im14LWF1dG8iCiAgICAgICAgICAgID48L3YtaW1nPgogICAgICAgICAgICA8di1jYXJkLXRleHQgY2xhc3M9InRleHQtY2VudGVyIiBhbGlnbj0iY2VudGVyIiBqdXN0aWZ5PSJjZW50ZXIiPgogICAgICAgICAgICAgIHt7IGl0ZW0ubmF6aXYgfX0KICAgICAgICAgICAgPC92LWNhcmQtdGV4dD4KICAgICAgICAgICAgPHYtZGlhbG9nCiAgICAgICAgICAgICAgdi1tb2RlbD0iZGlhbG9nIgogICAgICAgICAgICAgIGZ1bGxzY3JlZW4KICAgICAgICAgICAgICBoaWRlLW92ZXJsYXkKICAgICAgICAgICAgICB0cmFuc2l0aW9uPSJkaWFsb2ctYm90dG9tLXRyYW5zaXRpb24iCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1zbG90OmFjdGl2YXRvcj0ieyBvbiwgYXR0cnMgfSIgY2xhc3M9Im14LWF1dG8iPgogICAgICAgICAgICAgICAgPHYtY29sIGFsaWduPSJjZW50ZXIiPgogICAgICAgICAgICAgICAgICA8di1idG4KICAgICAgICAgICAgICAgICAgICBjb2xvcj0id2hpdGUiCiAgICAgICAgICAgICAgICAgICAgdi1iaW5kPSJhdHRycyIKICAgICAgICAgICAgICAgICAgICB2LW9uPSJvbiIKICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5PSJjZW50ZXIiCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im14LWF1dG8iCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjE1MHB4IgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgVmnFoWUgbyBwcm9penZvZHUKICAgICAgICAgICAgICAgICAgPC92LWJ0bj48L3YtY29sCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICA8di1jYXJkPgogICAgICAgICAgICAgICAgPHYtdG9vbGJhciBkYXJrIGNvbG9yPSJwcmltYXJ5Ij4KICAgICAgICAgICAgICAgICAgPHYtYnRuIGljb24gZGFyayBAY2xpY2s9ImRpYWxvZyA9IGZhbHNlIj4KICAgICAgICAgICAgICAgICAgICA8di1pY29uPm1kaS1jbG9zZTwvdi1pY29uPgogICAgICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICAgICAgPC92LXRvb2xiYXI+CiAgICAgICAgICAgICAgICA8YnIgLz4KICAgICAgICAgICAgICAgIDx2LXJvdyBhbGlnbj0iY2VudGVyIiBqdXN0aWZ5PSJjZW50ZXIiPgogICAgICAgICAgICAgICAgICA8di1jb2wgY29scz0iNiI+CiAgICAgICAgICAgICAgICAgICAgPHYtaW1nCiAgICAgICAgICAgICAgICAgICAgICB3aWR0aD0iNDAwcHgiCiAgICAgICAgICAgICAgICAgICAgICA6c3JjPSJpdGVtLnNsaWthIgogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im14LWF1dG8iCiAgICAgICAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIgogICAgICAgICAgICAgICAgICAgICAganVzdGlmeT0iY2VudGVyIgogICAgICAgICAgICAgICAgICAgID48L3YtaW1nPgogICAgICAgICAgICAgICAgICA8L3YtY29sPgoKICAgICAgICAgICAgICAgICAgPHYtY29sCiAgICAgICAgICAgICAgICAgICAgPjx2LWNhcmQtdGV4dAogICAgICAgICAgICAgICAgICAgICAgPjxoMT57eyBpdGVtLm5heml2IH19PC9oMT48L3YtY2FyZC10ZXh0CiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIDx2LWNhcmQtdGV4dAogICAgICAgICAgICAgICAgICAgICAgPjxwPgogICAgICAgICAgICAgICAgICAgICAgICAiTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcKICAgICAgICAgICAgICAgICAgICAgICAgZWxpdCwgc2VkIGRvIGVpdXNtb2QgdGVtcG9yIGluY2lkaWR1bnQgdXQgbGFib3JlIGV0CiAgICAgICAgICAgICAgICAgICAgICAgIGRvbG9yZSBtYWduYSBhbGlxdWEuIFV0IGVuaW0gYWQgbWluaW0gdmVuaWFtLCBxdWlzCiAgICAgICAgICAgICAgICAgICAgICAgIG5vc3RydWQgZXhlcmNpdGF0aW9uIHVsbGFtY28gbGFib3JpcyBuaXNpIHV0IGFsaXF1aXAKICAgICAgICAgICAgICAgICAgICAgICAgZXggZWEgY29tbW9kbyBjb25zZXF1YXQuIER1aXMgYXV0ZSBpcnVyZSBkb2xvciBpbgogICAgICAgICAgICAgICAgICAgICAgICByZXByZWhlbmRlcml0IGluIHZvbHVwdGF0ZSB2ZWxpdCBlc3NlIGNpbGx1bSBkb2xvcmUgZXUKICAgICAgICAgICAgICAgICAgICAgICAgZnVnaWF0IG51bGxhIHBhcmlhdHVyLiBFeGNlcHRldXIgc2ludCBvY2NhZWNhdAogICAgICAgICAgICAgICAgICAgICAgICBjdXBpZGF0YXQgbm9uIHByb2lkZW50LCBzdW50IGluIGN1bHBhIHF1aSBvZmZpY2lhCiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2VydW50IG1vbGxpdCBhbmltIGlkIGVzdCBsYWJvcnVtLiIKICAgICAgICAgICAgICAgICAgICAgIDwvcD48L3YtY2FyZC10ZXh0CiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgPC92LXJvdz4KICAgICAgICAgICAgICA8L3YtY2FyZD4KICAgICAgICAgICAgPC92LWRpYWxvZz4KICAgICAgICAgIDwvdi1jYXJkPgogICAgICAgIDwvdi1jb2w+CiAgICAgIDwvdi1yb3c+CiAgICA8L3RlbXBsYXRlPgoKICAgIDwhLS0gQ29tbWVudCA8dGVtcGxhdGUgdi1zbG90OmZvb3Rlcj4KICAgICAgPHYtcm93IGNsYXNzPSJtdC0yIiBhbGlnbj0iY2VudGVyIiBqdXN0aWZ5PSJjZW50ZXIiPgogICAgICAgIDx2LXNwYWNlcj48L3Ytc3BhY2VyPgoKICAgICAgICA8di1idG4KICAgICAgICAgIGZhYgogICAgICAgICAgZGFyawogICAgICAgICAgY29sb3I9ImJsdWUgZGFya2VuLTMiCiAgICAgICAgICBjbGFzcz0ibXItMSIKICAgICAgICAgIEBjbGljaz0iZm9ybWVyUGFnZSIKICAgICAgICA+CiAgICAgICAgICA8di1pY29uPm1kaS1jaGV2cm9uLWxlZnQ8L3YtaWNvbj4KICAgICAgICA8L3YtYnRuPgogICAgICAgIDx2LWJ0biBmYWIgZGFyayBjb2xvcj0iYmx1ZSBkYXJrZW4tMyIgY2xhc3M9Im1sLTEiIEBjbGljaz0ibmV4dFBhZ2UiPgogICAgICAgICAgPHYtaWNvbj5tZGktY2hldnJvbi1yaWdodDwvdi1pY29uPgogICAgICAgIDwvdi1idG4+CiAgICAgICAgPHNwYW4gY2xhc3M9ImdyZXktLXRleHQgdGV4dC1jZW50ZXIiPgogICAgICAgICAge3sgcGFnZSB9fSBvZCB7eyBudW1iZXJPZlBhZ2VzIH19CiAgICAgICAgPC9zcGFuPgogICAgICAgIDx2LW1lbnUgb2Zmc2V0LXk+CiAgICAgICAgICA8dGVtcGxhdGUgdi1zbG90OmFjdGl2YXRvcj0ieyBvbiwgYXR0cnMgfSI+CiAgICAgICAgICAgIDx2LWJ0bgogICAgICAgICAgICAgIGRhcmsKICAgICAgICAgICAgICB0ZXh0CiAgICAgICAgICAgICAgY29sb3I9InByaW1hcnkiCiAgICAgICAgICAgICAgd2lkdGg9IjI1MHB4IgogICAgICAgICAgICAgIHYtYmluZD0iYXR0cnMiCiAgICAgICAgICAgICAgdi1vbj0ib24iCiAgICAgICAgICAgID4KICAgICAgICAgICAgICBQcm9penZvZGEgcG8gc3RyYW5pY2k6IHt7IGl0ZW1zUGVyUGFnZSB9fQogICAgICAgICAgICAgIDx2LWljb24+bWRpLWNoZXZyb24tZG93bjwvdi1pY29uPgogICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDx2LWxpc3Q+CiAgICAgICAgICAgIDx2LWxpc3QtaXRlbQogICAgICAgICAgICAgIHYtZm9yPSIobnVtYmVyLCBpbmRleCkgaW4gaXRlbXNQZXJQYWdlQXJyYXkiCiAgICAgICAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgICAgICAgICAgQGNsaWNrPSJ1cGRhdGVJdGVtc1BlclBhZ2UobnVtYmVyKSIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS10aXRsZT57eyBudW1iZXIgfX08L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICAgICAgICA8L3YtbGlzdC1pdGVtPgogICAgICAgICAgPC92LWxpc3Q+CiAgICAgICAgPC92LW1lbnU+CiAgICAgIDwvdi1yb3c+CiAgICA8L3RlbXBsYXRlPiAtLT4KICA8L3YtZGF0YS1pdGVyYXRvcj4KPC92LWNvbnRhaW5lcj4K"},null]}