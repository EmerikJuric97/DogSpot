{"remainingRequest":"C:\\Users\\Korisnik\\Desktop\\lovro\\dogspot\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Korisnik\\Desktop\\lovro\\dogspot\\src\\views\\Macke.vue?vue&type=template&id=0241c49f&scoped=true&class=bodyy&","dependencies":[{"path":"C:\\Users\\Korisnik\\Desktop\\lovro\\dogspot\\src\\views\\Macke.vue","mtime":1649849383453},{"path":"C:\\Users\\Korisnik\\Desktop\\lovro\\dogspot\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649279055367},{"path":"C:\\Users\\Korisnik\\Desktop\\lovro\\dogspot\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1649279058904},{"path":"C:\\Users\\Korisnik\\Desktop\\lovro\\dogspot\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1649279055367},{"path":"C:\\Users\\Korisnik\\Desktop\\lovro\\dogspot\\node_modules\\vue-loader\\lib\\index.js","mtime":1649279057969}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}